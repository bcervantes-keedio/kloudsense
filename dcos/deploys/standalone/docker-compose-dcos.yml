#title           :docker-compose.yml
#description     :Docker Compose file to deploy de KloudSense System
#author          :Alejandro Villegas Lopez (avillegas@keedio.com).
#===============================================================================


#===============================================================================
# KloudSense
#===============================================================================
version: '3.2'

services:
  grafana:
    image: keedio/ks-grafana-dcos:0.1-beta
    restart: on-failure
    container_name: ks-dcos-grafana
    hostname: ks-dcos-grafana
    ports:
      - "80:3000"
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.1.1
    extra_hosts:
      - "prometheus:172.16.2.1"
    volumes:
      - type: bind
        source: ../../config/grafana/grafana.ini
        target: /etc/grafana/grafana.ini
    healthcheck:
      test: ["CMD-SHELL", "curl -XGET http://localhost:3000/api/health | grep '\"database\": \"ok\"'"]
      interval: 30s
      timeout: 30s
      retries: 3
    labels:
      - "kloudsense.mode=DCOS"


  prometheus:
    image: keedio/ks-prometheus:0.2-beta
    restart: on-failure
    container_name: ks-dcos-prometheus
    hostname: ks-dcos-prometheus
    ports:
      - "60000:9090"
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.2.1
    extra_hosts:
      - "prometheus:172.16.2.1"
      - "grafana:172.16.1.1"
      - "alertmanager:172.16.4.1"
      - "drools_connector:172.16.8.1"
      - "cp-adapter-read:172.16.2.2"
      - "cp-adapter-write:172.16.2.3"
    volumes:
      - type: bind
        source: ../../config/prometheus/resolv.conf
        target: /etc/resolv.conf
      - type: bind
        source: ../../config/prometheus/rules.yml
        target: /etc/prometheus/rules.yml
      - type: bind
        source: ../../config/prometheus/prometheus.yml
        target: /etc/prometheus/prometheus.yml
      - type: volume
        source: prometheus_data
        target: /prometheus
    healthcheck:
      test: ["CMD-SHELL", "[[ \"$$(wget -q -O - http://localhost:9090/-/healthy)\" == \"Prometheus is Healthy.\" ]]"]
      interval: 30s
      timeout: 30s
      retries: 3
    labels:
      - "kloudsense.mode=DCOS"


  cp-adapter-read:
    image: keedio/ks-cp-adapter:0.1.1-beta
    restart: on-failure
    container_name: ks-dcos-cp-adapter-read
    hostname: ks-dcos-cp-adapter-read
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.2.2
    depends_on:
      - prometheus
    extra_hosts:
      - "prometheus:172.16.2.1"
      - "cratedb-load-balancer-01:172.16.6.1"
      - "cratedb-load-balancer-02:172.16.6.2"
    volumes:
      - type: bind
        source: ../../config/cp-adapter-read/config.yml
        target: /config.yml
    labels:
      - "kloudsense.mode=DCOS"


  cp-adapter-write:
    image: keedio/ks-cp-adapter:0.1.1-beta
    restart: on-failure
    container_name: ks-dcos-cp-adapte-writer
    hostname: ks-dcos-cp-adapte-writer
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.2.3
    depends_on:
      - prometheus
    extra_hosts:
      - "prometheus:172.16.2.1"
      - "cratedb-load-balancer-01:172.16.6.1"
      - "cratedb-load-balancer-02:172.16.6.2"
    volumes:
      - type: bind
        source: ../../config/cp-adapter-write/config.yml
        target: /config.yml
    labels:
      - "kloudsense.mode=DCOS"


  cratedb-node-load-balancer-01:
    image: keedio/ks-cratedb-ce:0.1.2-beta
    restart: on-failure
    container_name: ks-dcos-cratedb-node-load-balancer-01
    hostname: ks-dcos-cratedb-node-load-balancer-01
    privileged: true
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.6.1
    depends_on:
      - cp-adapter-read
      - cp-adapter-write
    ports:
      - "4200:4200"
      - "5432:5432"
    extra_hosts:
      - "node-lb-01:172.16.6.1"
      - "node-lb-02:172.16.6.2"
      - "node-data-001:172.16.6.10"
      - "node-data-002:172.16.6.11"
      - "node-data-003:172.16.6.12"
    volumes:
      - type: bind
        source: ../../config/cratedb/node-lb-01/crate.yml
        target: /crate-ce/config/crate.yml
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://$$(hostname):4200 | grep '\"ok\" : true'"]
      interval: 30s
      timeout: 30s
      retries: 3
    labels:
      - "kloudsense.mode=DCOS"


  cratedb-node-load-balancer-02:
    image: keedio/ks-cratedb-ce:0.1.2-beta
    restart: on-failure
    container_name: ks-dcos-cratedb-node-load-balancer-02
    hostname: ks-dcos-cratedb-node-load-balancer-02
    privileged: true
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.6.2
    depends_on:
      - cp-adapter-read
      - cp-adapter-write
    ports:
      - "4201:4200"
      - "5433:5433"
    extra_hosts:
      - "node-lb-01:172.16.6.1"
      - "node-lb-02:172.16.6.2"
      - "node-data-001:172.16.6.10"
      - "node-data-002:172.16.6.11"
      - "node-data-003:172.16.6.12"
    volumes:
      - type: bind
        source: ../../config/cratedb/node-lb-02/crate.yml
        target: /crate-ce/config/crate.yml
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://$$(hostname):4200 | grep '\"ok\" : true'"]
      interval: 30s
      timeout: 30s
      retries: 3
    labels:
      - "kloudsense.mode=DCOS"


  cratedb-node-001:
    image: keedio/ks-cratedb-ce:0.1.2-beta
    restart: on-failure
    container_name: ks-dcos-cratedb-node-001
    hostname: ks-dcos-cratedb-node-001
    privileged: true
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.6.10
    depends_on:
      - cratedb-node-load-balancer-01
      - cratedb-node-load-balancer-02
    extra_hosts:
      - "node-lb-01:172.16.6.1"
      - "node-lb-02:172.16.6.2"
      - "node-data-001:172.16.6.10"
      - "node-data-002:172.16.6.11"
      - "node-data-003:172.16.6.12"
    volumes:
      - type: volume
        source: cratedb-data-node-001
        target: /crate-ce/data
      - type: bind
        source: ../../config/cratedb/node-data-001/crate.yml
        target: /crate-ce/config/crate.yml
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://$$(hostname):4200 | grep '\"ok\" : true'"]
      interval: 30s
      timeout: 30s
      retries: 3
    labels:
      - "kloudsense.mode=DCOS"


  cratedb-node-002:
    image: keedio/ks-cratedb-ce:0.1.2-beta
    restart: on-failure
    container_name: ks-dcos-cratedb-node-002
    hostname: ks-dcos-cratedb-node-002
    privileged: true
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.6.11
    depends_on:
      - cratedb-node-load-balancer-01
      - cratedb-node-load-balancer-02
    extra_hosts:
      - "node-lb-01:172.16.6.1"
      - "node-lb-02:172.16.6.2"
      - "node-data-001:172.16.6.10"
      - "node-data-002:172.16.6.11"
      - "node-data-003:172.16.6.12"
    volumes:
      - type: volume
        source: cratedb-data-node-002
        target: /crate-ce/data
      - type: bind
        source: ../../config/cratedb/node-data-002/crate.yml
        target: /crate-ce/config/crate.yml
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://$$(hostname):4200 | grep '\"ok\" : true'"]
      interval: 30s
      timeout: 30s
      retries: 3
    labels:
      - "kloudsense.mode=DCOS"


  cratedb-node-003:
    image: keedio/ks-cratedb-ce:0.1.2-beta
    restart: on-failure
    container_name: ks-dcos-cratedb-node-003
    hostname: ks-dcos-cratedb-node-003
    privileged: true
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.6.12
    depends_on:
      - cratedb-node-load-balancer-01
      - cratedb-node-load-balancer-02
    extra_hosts:
      - "node-lb-01:172.16.6.1"
      - "node-lb-02:172.16.6.2"
      - "node-data-001:172.16.6.10"
      - "node-data-002:172.16.6.11"
      - "node-data-003:172.16.6.12"
    volumes:
      - type: volume
        source: cratedb-data-node-003
        target: /crate-ce/data
      - type: bind
        source: ../../config/cratedb/node-data-003/crate.yml
        target: /crate-ce/config/crate.yml
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://$$(hostname):4200 | grep '\"ok\" : true'"]
      interval: 30s
      timeout: 30s
      retries: 3
    labels:
      - "kloudsense.mode=DCOS"


  alertmanager:
    image: keedio/ks-alertmanager:0.2-beta
    restart: on-failure
    container_name: ks-dcos-alertmanager
    hostname: ks-dcos-alertmanager
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.4.1
    depends_on:
      - prometheus
    ports:
      - "60100:9093"
    extra_hosts:
      - "prometheus:172.16.2.1"
    volumes:
      - type: bind
        source: ../../config/alertmanager/alertmanager.yml
        target: /etc/alertmanager/alertmanager.yml
    healthcheck:
      test: ["CMD-SHELL", "[[ \"$$(wget -q -O - http://localhost:9093/-/healthy)\" == \"OK\" ]]"]
      interval: 30s
      timeout: 30s
      retries: 3
    labels:
      - "kloudsense.mode=DCOS"


  airflow-redis:
    image: redis:3.2.7
    restart: on-failure
    container_name: ks-dcos-airflow-redis
    hostname: ks-dcos-airflow-redis
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.7.1
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "kloudsense.mode=DCOS"


  airflow-postgres:
    image: postgres:9.6
    restart: on-failure
    container_name: ks-dcos-airflow-postgres
    hostname: ks-dcos-airflow-postgres
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.7.2
    environment:
        - POSTGRES_USER=airflow
        - POSTGRES_PASSWORD=airflow
        - POSTGRES_DB=airflow
        - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - type: volume
        source: airflow_pgsql_data
        target: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "kloudsense.mode=DCOS"


  airflow-webserver:
    image: keedio/ks-airflow:0.1-beta
    restart: on-failure
    container_name: ks-dcos-airflow-webserver
    hostname: ks-dcos-airflow-webserver
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.7.3
    depends_on:
      - airflow-postgres
      - airflow-redis
    ports:
      - "8083:8080"
    extra_hosts:
      - "postgres:172.16.7.2"
      - "redis:172.16.7.1"
    environment:
      - LOAD_EX=n
      - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - EXECUTOR=Celery
    volumes:
      - ../../config/airflow/dags:/usr/local/airflow/dags
    command: webserver
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
    labels:
      - "kloudsense.mode=DCOS"

  airflow-flower:
    image: keedio/ks-airflow:0.1-beta
    restart: on-failure
    container_name: ks-dcos-airflow-flower
    hostname: ks-dcos-airflow-flower
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.7.4
    depends_on:
      - airflow-redis
    extra_hosts:
      - "postgres:172.16.7.2"
      - "redis:172.16.7.1"
    environment:
      - EXECUTOR=Celery
    ports:
      - "5555:5555"
    command: flower
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null http://localhost:5555 || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
    labels:
      - "kloudsense.mode=DCOS"

  airflow-scheduler:
    image: keedio/ks-airflow:0.1-beta
    restart: on-failure
    container_name: ks-dcos-airflow-scheduler
    hostname: ks-dcos-airflow-scheduler
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.7.5
    depends_on:
      - airflow-webserver
    extra_hosts:
      - "postgres:172.16.7.2"
      - "redis:172.16.7.1"
    volumes:
      - ../../config/airflow/dags:/usr/local/airflow/dags
    environment:
      - LOAD_EX=n
      - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - EXECUTOR=Celery
    command: scheduler
    labels:
      - "kloudsense.mode=DCOS"


  airflow-worker-001:
    image: keedio/ks-airflow:0.1-beta
    restart: on-failure
    container_name: ks-dcos-airflow-worker-001
    hostname: ks-dcos-airflow-worker-001
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.7.100
    depends_on:
      - airflow-scheduler
    extra_hosts:
      - "postgres:172.16.7.2"
      - "redis:172.16.7.1"
    volumes:
      - ../../config/airflow/dags:/usr/local/airflow/dags
    environment:
      - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - EXECUTOR=Celery
    command: worker
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null http://$$(hostname):8793 || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
    labels:
      - "kloudsense.mode=DCOS"


  airflow-worker-002:
    image: keedio/ks-airflow:0.1-beta
    restart: on-failure
    container_name: ks-dcos-airflow-worker-002
    hostname: ks-dcos-airflow-worker-002
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.7.101
    depends_on:
      - airflow-scheduler
    extra_hosts:
      - "postgres:172.16.7.2"
      - "redis:172.16.7.1"
    volumes:
      - ../../config/airflow/dags:/usr/local/airflow/dags
    environment:
      - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - EXECUTOR=Celery
    command: worker
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null http://$$(hostname):8793 || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
    labels:
      - "kloudsense.mode=DCOS"


  airflow-worker-003:
    image: keedio/ks-airflow:0.1-beta
    restart: on-failure
    container_name: ks-dcos-airflow-worker-003
    hostname: ks-dcos-airflow-worker-003
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.7.102
    depends_on:
      - airflow-scheduler
    extra_hosts:
      - "postgres:172.16.7.2"
      - "redis:172.16.7.1"
    volumes:
      - ../../config/airflow/dags:/usr/local/airflow/dags
    environment:
      - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - EXECUTOR=Celery
    command: worker
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null http://$$(hostname):8793 || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
    labels:
      - "kloudsense.mode=DCOS"


  drools-connector:
    image: keedio/ks-rules-engine-connector:0.1-beta
    restart: on-failure
    container_name: ks-dcos-rules-engine-connector
    hostname: ks-dcos-rules-engine-connector
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.8.1
    extra_hosts:
      - "drools:172.16.8.2"
    depends_on:
      - prometheus
    entrypoint:
      - java
      - -jar
      - /RulesEngineConnector/build/libs/RulesEngineConnector-1.0-SNAPSHOT.jar
    command: ["drools:8080", "kieserver", "kieserver", "test"]
    labels:
      - "kloudsense.mode=DCOS"


  drools:
    image: keedio/ks-rules-engine:0.1-beta
    restart: on-failure
    container_name: ks-dcos-rules-engine
    hostname: ks-dcos-rules-engine
    networks:
      ks_dcos_net:
        ipv4_address: 172.16.8.2
    depends_on:
      - drools-connector
    ports:
      - "8080:8080"
      - "9990:9990"
    labels:
      - "kloudsense.mode=DCOS"


#=============================
# Networking
#===============================================================================
volumes:
  prometheus_data:
  airflow_pgsql_data:
  cratedb-data-node-001:
  cratedb-data-node-002:
  cratedb-data-node-003:




#=============================
# Networking
#===============================================================================
networks:
  ks_dcos_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.0.0/16
          # SUBNETS
          # Front_End:
          #     172.16.1.XXX
          #
          # Prometheus:
          #     172.16.2.XXX
          #
          # Exporters:
          #     172.16.3.XXX
          #
          # Alert-Managers:
          #     172.16.4.XXX
          #
          # CrateDB:
          #     172.16.6.XXX
          #
          # Airflow:
          #     172.16.7.XXX
